C51 COMPILER V9.60.7.0   USERUART                                                          04/03/2024 13:54:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE USERUART
OBJECT MODULE PLACED IN .\Output\UserUART.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Source\UserFiles\UserUART.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(
                    -5,SPEED) BROWSE INCDIR(..\Library\FU68xx_Hardware_Driver\Include;..\User\Include) DEBUG PRINT(.\Listing\UserUART.lst) TA
                    -BS(2) OBJECT(.\Output\UserUART.obj)

line level    source

   1          
   2          /* Includes -------------------------------------------------------------------------------------*/
   3          #include <FU68xx_2.h>
   4          #include <Myproject.h>
   5          #include <Customer_Debug.h>
   6          
   7          #include <UserGlobal.h>
   8          #include <UserDefine.h>
   9          
  10          /* Private typedef ------------------------------------------------------------------------------*/
  11          /* Private define -------------------------------------------------------------------------------*/
  12          /* Private macro --------------------------------------------------------------------------------*/
  13          /* Private variables ----------------------------------------------------------------------------*/
  14          /* Private function prototypes ------------------------------------------------------------------*/
  15          /* Private functions ----------------------------------------------------------------------------*/
  16          
  17          #define UTX_LENTH         6
  18          #define URX_LENTH         6
  19          
  20          extern u16 KeyGoDuty;
  21          extern u8  idata AlarmFlag;
  22          
  23          u8  UTXMark;
  24          u8  URXMark;
  25          
  26          u8  idata UartTxLine[UTX_LENTH];
  27          u8  idata UartRxLine[URX_LENTH];
  28          u8  idata URXSum;
  29          u8  idata UTXSum;
  30          
  31          
  32          u8  idata UartTxTrig;
  33          u8  idata UartTxData;
  34          u8  idata UartTxCnt;
  35          u8  idata UartTxFlag;
  36          
  37          u8  idata UartRxData;
  38          u8  idata UartRxCnt;
  39          u8  idata UartRxFlag;
  40          
  41          u8  idata URXCnt;     // 调试用，接收计数
  42          u8  idata UTXCnt;     // 调试用，发送计数
  43          
  44          u8  idata UartFrameErr;
  45          
  46          u8  idata UartHeadErr;
  47          u8  idata UartSumErr;
  48          u8  idata UartNoRxErr;
  49          u8  idata UartTimeOutErr;
  50          u8  idata UartErr;
  51          
  52          u16 UartRxIdleX1ms;         // 通信空闲等待
  53          u16 UartRxInvalidX1ms;      // 通信无效等待
C51 COMPILER V9.60.7.0   USERUART                                                          04/03/2024 13:54:56 PAGE 2   

  54          
  55          u8  URXCmdVal;
  56          u16 URXGoDuty;
  57          u32 URXCmdSpd;
  58          
  59          u16 URXCmdPwr;
  60          u32 URXCmdRpm;
  61          
  62          //----------------------------------------------------------------------------//
  63          // 说明：UART数据初始化
  64          void UARTDataInit(void)
  65          {
  66   1        //  
  67   1        UartTxLine[0]  = 0x55;
  68   1        UartTxLine[1]  = 0xAA;
  69   1        UartTxLine[5]  = 0x55;
  70   1        
  71   1        UTXMark = 1;
  72   1      }
  73          //----------------------------------------------------------------------------//
  74          // 说明：接收数据
  75          void UARTGetData(void)
  76          {
  77   1        UartRxData = UT_DR;                       // 读接收数据
  78   1        
  79   1        if(UartRxCnt == 0)                        // 帧首字节
  80   1        {
  81   2          if(UartRxData == 0x55)
  82   2          {
  83   3            UartRxLine[0]= 0x55;
  84   3            UartRxCnt++;
  85   3          }
  86   2        }
  87   1        else
  88   1        {
  89   2          
  90   2          UartRxLine[UartRxCnt] = UartRxData;   // 依次接收各数据
  91   2      //    if(UartRxCnt < (URX_LENTH-1))
  92   2      //      URXSum += UartRxData;               // 累加校验
  93   2          
  94   2          if(++UartRxCnt >= URX_LENTH)
  95   2          {
  96   3            URXSum = UartRxLine[2] + UartRxLine[3];
  97   3      
  98   3            // 判断帧，调试中可去除此判断
  99   3            if((UartRxLine[1] != 0xAA)||(UartRxLine[5] != 0x55)||(UartRxLine[4] != URXSum))
 100   3              UartFrameErr = 1;
 101   3      
 102   3            UartRxFlag = 1;                     // 收到6 byte，待处理
 103   3            UartRxCnt = 0;
 104   3            URXCnt++;
 105   3          }
 106   2          
 107   2        }
 108   1        
 109   1        UartRxIdleX1ms = 0;                       // 清除等待计数器
 110   1        //UartRxByteFlag = 1;                       // 接收到1byte
 111   1      }
 112          //----------------------------------------------------------------------------//
 113          // 说明：发送数据
 114          void UARTSetData(void)
 115          {
C51 COMPILER V9.60.7.0   USERUART                                                          04/03/2024 13:54:56 PAGE 3   

 116   1      
 117   1        // 当前无发送任务
 118   1        if(UartTxFlag == 0)
 119   1        {
 120   2          if(UartTxTrig == 1)
 121   2          {
 122   3            UartTxTrig = 0;
 123   3            UartTxFlag = 1;
 124   3          }
 125   2        }
 126   1        // 当前有发送任务
 127   1        else//if(UartTxFlag == 1)
 128   1        {
 129   2          if(UartTxCnt < UTX_LENTH)
 130   2          {
 131   3            if(UTXMark == 1)                  // 发送中断已处理完成
 132   3            {
 133   4              UTXMark = 0;                    // 标志位清零
 134   4              UT_DR = UartTxLine[UartTxCnt];  // 发送当前字节
 135   4              UartTxCnt++;                    // 计数累计
 136   4            }
 137   3          }
 138   2          if(UartTxCnt >= UTX_LENTH)                  // 计数完成
 139   2          {
 140   3            UartTxFlag = 0;                   // 清除发送标志
 141   3            UartTxCnt = 0;                    // 清除计数器
 142   3            //UartTxFrameCnt++;
 143   3            UTXCnt++; 
 144   3          }
 145   2        }
 146   1      }
 147          
 148          void UARTPer1ms(void)
 149          {
 150   1        
 151   1        UARTSetData();                        // 定时发送数据
 152   1        //UARTGetData();                      // 定时查收数据，此处1ms周期时长不足，置于中断处理
 153   1        
 154   1        // 通信空闲计时，仅对空闲时段计时，在接收到通信数据时清除
 155   1        if(++UartRxIdleX1ms >= 1000)
 156   1        {
 157   2          UartRxIdleX1ms = 1000;
 158   2        }
 159   1      
 160   1        // 空闲较长，接收字节计数清除
 161   1        if(UartRxCnt > 0)
 162   1        {
 163   2          if(UartRxIdleX1ms >= 50)
 164   2          {
 165   3            UartRxCnt = 0;
 166   3          }
 167   2        }
 168   1        
 169   1        if(UartRxFlag == 1)
 170   1        {
 171   2          UartRxFlag = 0;
 172   2      
 173   2          if(UartFrameErr == 0)
 174   2          {
 175   3          
 176   3            if(UartRxLine[2] == 0xFF)           // 只有0xFF开机,其他一律关机
 177   3            {
C51 COMPILER V9.60.7.0   USERUART                                                          04/03/2024 13:54:56 PAGE 4   

 178   4              URXCmdVal = UartRxLine[3];
 179   4            }
 180   3            else // if(UartRxLine[2] == 0x00)      // 停机
 181   3            {
 182   4              URXCmdVal = 0;
 183   4            }
 184   3            
 185   3            if(mcState == mcReady)  
 186   3              UartTxLine[2]  = 0x00;            // 未运行
 187   3            else
 188   3              UartTxLine[2]  = 0xFF;            // 运行0
 189   3            
 190   3            if(URXCmdVal == 0)
 191   3              URXGoDuty = 0;
 192   3            else
 193   3              URXGoDuty = _Q12(1);
 194   3            
 195   3            // URXCmdVal: 如控制功率，即为功率值；如控制转速 需*30 对应转速。
 196   3            // 通信命令值 乘以300 表示实际预期值
 197   3            // 32767 对应 180000，则转换为  ((Cmd * 30)/ 180000) * 32767 
 198   3            // 等效运算 Cmd *109
 199   3            
 200   3            //URXCmdPwr = URXCmdVal;
 201   3            URXCmdRpm = (u32)URXCmdVal*30;
 202   3            URXCmdSpd = (u32)URXCmdVal *11;
 203   3            
 204   3            if(URXCmdRpm < 1000)
 205   3            {
 206   4              URXGoDuty = 0;
 207   4              URXCmdSpd = 0;
 208   4            }
 209   3          }
 210   2          else
 211   2          {
 212   3            UartFrameErr = 0;
 213   3            URXGoDuty = 0;
 214   3            URXCmdSpd = 0;
 215   3          
 216   3            UartTxLine[2]  = 0x00;
 217   3          }
 218   2          
 219   2          //UartTxLine[3]  = 0x00;
 220   2          UartTxLine[3]  = AlarmFlag;
 221   2          UartTxLine[4]  = UartTxLine[2] + UartTxLine[3];
 222   2      
 223   2          UartTxTrig = 1;
 224   2        }
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    436    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     29    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.60.7.0   USERUART                                                          04/03/2024 13:54:56 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
