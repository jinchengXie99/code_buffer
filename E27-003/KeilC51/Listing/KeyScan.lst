C51 COMPILER V9.60.7.0   KEYSCAN                                                           02/24/2024 10:00:31 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Output\KeyScan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Source\Function\KeyScan.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(5,
                    -SPEED) BROWSE INCDIR(..\Library\FU68xx_Hardware_Driver\Include;..\User\Include) DEBUG PRINT(.\Listing\KeyScan.lst) TABS(
                    -2) OBJECT(.\Output\KeyScan.obj)

line level    source

   1          /**************************** (C) COPYRIGHT 2015 Fortiortech shenzhen *****************************
   2          * File Name          : KeyScan.c
   3          * Author             : Billy Long Fortiortech  Market Dept
   4          * Version            : V1.0
   5          * Date               : 01/07/2015
   6          * Description        : This file contains key scan function used for Motor Control.
   7          ***************************************************************************************************
   8          * All Rights Reserved
   9          **************************************************************************************************/ 
  10          
  11          
  12          /* Includes -------------------------------------------------------------------------------------*/
  13          #include <FU68xx_2.h>
  14          #include <Myproject.h>
  15          
  16          /* Private variables ----------------------------------------------------------------------------*/
  17          KeyScanParam_TypeDef  KS;
  18          
  19          /*-------------------------------------------------------------------------------------------------
  20            Function Name :  void KeyInit(void)
  21            Description   :  按键参数初始化
  22            Input         :  无
  23            Output        :  无
  24          -------------------------------------------------------------------------------------------------*/
  25          void KeyInit(void)
  26          {
  27   1        memset(&KS,0, sizeof(KeyScanParam_TypeDef));    
  28   1        
  29   1        Rom.WriteValue = 0;
  30   1        Rom.ReadValue = Get1ByteFromFlash(STARTPAGEROMADDRESS);
  31   1        
  32   1        if((Rom.ReadValue == 0x11)||(Rom.ReadValue == 0x21) ||(Rom.ReadValue == 0x41) ||(Rom.ReadValue == 0x12) 
             -||(Rom.ReadValue == 0x22)
  33   1        ||(Rom.ReadValue == 0x42)||(Rom.ReadValue == 0x14)||(Rom.ReadValue== 0x24)||(Rom.ReadValue == 0x44)||(Ro
             -m.ReadValue == 0x18)
  34   1        ||(Rom.ReadValue == 0x28)||(Rom.ReadValue == 0x48))
  35   1        {
  36   2          KS.KeyValuetotal   = Rom.ReadValue;
  37   2          KS.Key1Value = Rom.ReadValue & 0x0F;
  38   2          KS.Key2Value = Rom.ReadValue & 0x70;;
  39   2          KS.Key3Value = 0x00;                //上电读取内存按键值
  40   2        }
  41   1        else                                  
  42   1        {
  43   2          KS.Key1Value = 0x01;
  44   2          KS.Key2Value = 0x10;
  45   2          KS.Key3Value = 0x00;
  46   2          KS.KeyValuetotal    = KS.Key1Value ^ KS.Key2Value ^ KS.Key3Value; //读值不对给固定档位
  47   2          KS.OldKeyValuetotal = KS.KeyValuetotal;
  48   2        }
  49   1      }
  50          
  51          /*-------------------------------------------------------------------------------------------------
C51 COMPILER V9.60.7.0   KEYSCAN                                                           02/24/2024 10:00:31 PAGE 2   

  52            Function Name :  uint8 KeyValue(void)
  53            Description   :  功能函数，获取按键值，选择返回键位值还是管脚电平KeyValue
  54            Input         :  无
  55            Output        :  键位值或者管脚电平KeyValue
  56          -------------------------------------------------------------------------------------------------*/
  57          int KeyValue(void)
  58          {
  59   1        /* SW1 Scan */
  60   1      //  if(SW1==1)
  61   1      //  {
  62   1      //    if(KS.SW1_Flag==1)
  63   1      //    {
  64   1      //      KS.Key1PressCnt ++;
  65   1      //      if(KS.Key1PressCnt >= KeyFilterTime)
  66   1      //      {
  67   1      //        KS.Key1PressCnt = KeyFilterTime;
  68   1      //        KS.SW1_Flag=0;    
  69   1      //        
  70   1      //        if((KS.Key1Value < 0x08)&&(KS.Key1Valueflag == 0))
  71   1      //        {
  72   1      //           KS.Key1Value = KS.Key1Value <<1;
  73   1      //        }
  74   1      //        else if((KS.Key1Value > 0x01)&&(KS.Key1Valueflag==1))
  75   1      //        {
  76   1      //           KS.Key1Value = KS.Key1Value >>1;
  77   1      //        }
  78   1      //        else if(KS.Key1Value == 0x08)
  79   1      //        {
  80   1      //          KS.Key1Valueflag= 1;
  81   1      //          KS.Key1Value = KS.Key1Value >>1;
  82   1      //        }
  83   1      //        else if(KS.Key1Value == 0x01)
  84   1      //        {
  85   1      //          KS.Key1Valueflag= 0;
  86   1      //          KS.Key1Value = KS.Key1Value <<1;
  87   1      //        }
  88   1      //        else
  89   1      //        {
  90   1      //          KS.Key1Valueflag= 0;
  91   1      //          KS.Key1Value = 0x01;
  92   1      //        }    
  93   1      //      }
  94   1      //    }
  95   1      //  }
  96   1      //  else
  97   1      //  {    
  98   1      //     KS.Key1PressCnt --;
  99   1      //     if(KS.Key1PressCnt <= 0)
 100   1      //     {
 101   1      //       KS.Key1PressCnt = 0;
 102   1      //       KS.SW1_Flag=1;
 103   1      //     }
 104   1      //  }    
 105   1      
 106   1        /* SW4 Scan */
 107   1        if(SW2==1)
 108   1        {
 109   2          if(KS.SW2_Flag==1)
 110   2          {
 111   3            KS.Key2PressCnt ++;
 112   3            if(KS.Key2PressCnt >= KeyFilterTime)
 113   3            {
C51 COMPILER V9.60.7.0   KEYSCAN                                                           02/24/2024 10:00:31 PAGE 3   

 114   4              KS.Key2PressCnt = KeyFilterTime;
 115   4              KS.SW2_Flag=0;
 116   4              
 117   4              if((KS.Key2Value < 0x40)&&(KS.Key2Valueflag == 0))
 118   4              {
 119   5                 KS.Key2Value = KS.Key2Value <<1;
 120   5              }
 121   4              else if((KS.Key2Value > 0x10)&&(KS.Key2Valueflag == 1))
 122   4              {
 123   5                 KS.Key2Value = KS.Key2Value >>1;
 124   5              }
 125   4              else if(KS.Key2Value == 0x40)
 126   4              {
 127   5                KS.Key2Valueflag= 1;
 128   5                KS.Key2Value = KS.Key2Value >>1;
 129   5              }
 130   4              else if(KS.Key2Value == 0x10)
 131   4              {
 132   5                KS.Key2Valueflag = 0;
 133   5                KS.Key2Value = KS.Key2Value <<1;
 134   5              }
 135   4              else
 136   4              {
 137   5                KS.Key2Valueflag = 0;
 138   5                KS.Key2Value = 0x20;
 139   5              }            
 140   4            }
 141   3          }
 142   2        }
 143   1        else
 144   1        {    
 145   2           KS.Key2PressCnt --;
 146   2           if(KS.Key2PressCnt <= 0)
 147   2           {
 148   3             KS.Key2PressCnt = 0;
 149   3             KS.SW2_Flag=1;
 150   3           }
 151   2        }  
 152   1      
 153   1        /* SW3 Scan */
 154   1        if(SW3==1)
 155   1        {
 156   2          KS.Key3PressCnt++;
 157   2          if(KS.Key3PressCnt >= KeyFilterTime)
 158   2          {
 159   3            KS.Key3PressCnt = KeyFilterTime;
 160   3            if(KS.SW3_Flag==1)
 161   3            {
 162   4              KS.SW3_Flag=0;
 163   4              if(KS.Key3Value == 0x80)
 164   4              {
 165   5                 KS.Key3Value = 0x00; 
 166   5              }
 167   4              else
 168   4              {
 169   5                KS.Key3Value = 0x80;
 170   5              }          
 171   4            }
 172   3          }
 173   2        }
 174   1        else
 175   1        {    
C51 COMPILER V9.60.7.0   KEYSCAN                                                           02/24/2024 10:00:31 PAGE 4   

 176   2           KS.Key3PressCnt --;
 177   2           if(KS.Key3PressCnt <= -KeyFilterTime)
 178   2           {
 179   3             KS.SW3_Flag=1;
 180   3           }
 181   2        }
 182   1        return (KS.Key1Value ^ KS.Key2Value ^ KS.Key3Value);  
 183   1      }
 184          
 185          /*-------------------------------------------------------------------------------------------------
 186            Function Name :  void KeyScan(void)
 187            Description   :  功能函数，按键扫描，按键触发传递出按键命令
 188            Input         :  无
 189            Output        :  无
 190          -------------------------------------------------------------------------------------------------*/
 191          void KeyScan(void)
 192          {
 193   1        KS.OldKeyValuetotal = KS.KeyValuetotal;
 194   1        
 195   1        KS.KeyValuetotal = KeyValue();
 196   1        
 197   1        if(KS.OldKeyValuetotal != KS.KeyValuetotal)
 198   1        {
 199   2          KS.ChangeKeyFlg = 1;
 200   2        }
 201   1      }
 202          
 203          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    504    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     25    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
